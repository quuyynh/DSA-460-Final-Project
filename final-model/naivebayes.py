# -*- coding: utf-8 -*-
"""NaiveBayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xDoTXU6jpx4wjmZMdPQd2lh7n_tYntI9
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import CategoricalNB
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

df = pd.read_csv("mushrooms_named.csv")

features = ['gill-size', 'bruises', 'ring-type', 'population', 'cap-shape']

df = df[features + ['class']]

le = LabelEncoder()
df = df.copy()

for col in df.columns:
    df[col] = le.fit_transform(df[col])

X = df.drop('class', axis=1)
y = df['class']

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

nb_model = CategoricalNB()
nb_model.fit(X_train, y_train)

y_proba = nb_model.predict_proba(X_test)
custom_threshold = 0.4
y_pred_custom = (y_proba[:, 1] >= custom_threshold).astype(int)

y_pred = nb_model.predict(X_test)

print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("Accuracy:", accuracy_score(y_test, y_pred))

